{
  "version": 3,
  "names": [
    "SelectionText",
    "elm",
    "selectionStart",
    "selectionEnd",
    "start",
    "end",
    "value",
    "isNaN",
    "text",
    "focus",
    "setRangeText",
    "position",
    "slice",
    "charAt",
    "getLineStartNumber",
    "str",
    "getSelectedValue",
    "indent",
    "replace",
    "old",
    "oldStart",
    "insertText",
    "split",
    "map",
    "txt",
    "join",
    "length",
    "reg",
    "RegExp",
    "newStart",
    "test",
    "event",
    "Event",
    "bubbles",
    "cancelable",
    "dispatchEvent"
  ],
  "sources": [
    "../src/SelectionText.ts"
  ],
  "sourcesContent": [
    "export class SelectionText {\n  elm: HTMLTextAreaElement;\n  start: number;\n  end: number;\n  value: string;\n  constructor(elm: HTMLTextAreaElement) {\n    const { selectionStart, selectionEnd } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text: string) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    return this.value.slice(\n      typeof start === 'number' && !isNaN(start) ? start : selectionStart,\n      typeof end === 'number' && !isNaN(end) ? start : selectionEnd,\n    );\n  }\n  getLineStartNumber() {\n    let start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    const start = this.getLineStartNumber();\n    const str = this.getSelectedValue(start);\n    let indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => (indent = old));\n    return indent;\n  }\n  lineStarInstert(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => text + txt)\n            .join('\\n'),\n        )\n        .position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      const reg = new RegExp(`^${text}`, 'g');\n      let newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => txt.replace(reg, ''))\n            .join('\\n'),\n        )\n        .position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    const event = new Event('input', { bubbles: true, cancelable: false });\n    this.elm.dispatchEvent(event);\n  }\n}\n"
  ],
  "mappings": "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"
}