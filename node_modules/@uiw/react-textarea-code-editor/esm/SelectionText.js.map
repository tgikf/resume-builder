{
  "version": 3,
  "names": [
    "SelectionText",
    "constructor",
    "elm",
    "start",
    "end",
    "value",
    "selectionStart",
    "selectionEnd",
    "position",
    "isNaN",
    "insertText",
    "text",
    "focus",
    "setRangeText",
    "getSelectedValue",
    "slice",
    "getLineStartNumber",
    "charAt",
    "getIndentText",
    "str",
    "indent",
    "replace",
    "old",
    "lineStarInstert",
    "oldStart",
    "split",
    "map",
    "txt",
    "join",
    "length",
    "lineStarRemove",
    "reg",
    "RegExp",
    "newStart",
    "test",
    "notifyChange",
    "event",
    "Event",
    "bubbles",
    "cancelable",
    "dispatchEvent"
  ],
  "sources": [
    "../src/SelectionText.ts"
  ],
  "sourcesContent": [
    "export class SelectionText {\n  elm: HTMLTextAreaElement;\n  start: number;\n  end: number;\n  value: string;\n  constructor(elm: HTMLTextAreaElement) {\n    const { selectionStart, selectionEnd } = elm;\n    this.elm = elm;\n    this.start = selectionStart;\n    this.end = selectionEnd;\n    this.value = this.elm.value;\n  }\n  position(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    this.start = typeof start === 'number' && !isNaN(start) ? start : selectionStart;\n    this.end = typeof end === 'number' && !isNaN(end) ? end : selectionEnd;\n    this.elm.selectionStart = this.start;\n    this.elm.selectionEnd = this.end;\n    return this;\n  }\n  insertText(text: string) {\n    // Most of the used APIs only work with the field selected\n    this.elm.focus();\n    this.elm.setRangeText(text);\n    this.value = this.elm.value;\n    this.position();\n    return this;\n  }\n  getSelectedValue(start?: number, end?: number) {\n    const { selectionStart, selectionEnd } = this.elm;\n    return this.value.slice(\n      typeof start === 'number' && !isNaN(start) ? start : selectionStart,\n      typeof end === 'number' && !isNaN(end) ? start : selectionEnd,\n    );\n  }\n  getLineStartNumber() {\n    let start = this.start;\n    while (start > 0) {\n      start--;\n      if (this.value.charAt(start) === '\\n') {\n        start++;\n        break;\n      }\n    }\n    return start;\n  }\n  /** Indent on new lines */\n  getIndentText() {\n    const start = this.getLineStartNumber();\n    const str = this.getSelectedValue(start);\n    let indent = '';\n    str.replace(/(^(\\s)+)/, (str, old) => (indent = old));\n    return indent;\n  }\n  lineStarInstert(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => text + txt)\n            .join('\\n'),\n        )\n        .position(oldStart + text.length, this.end);\n    }\n    return this;\n  }\n  lineStarRemove(text: string) {\n    if (text) {\n      const oldStart = this.start;\n      const start = this.getLineStartNumber();\n      const str = this.getSelectedValue(start);\n      const reg = new RegExp(`^${text}`, 'g');\n      let newStart = oldStart - text.length;\n      if (!reg.test(str)) {\n        newStart = oldStart;\n      }\n      this.position(start, this.end)\n        .insertText(\n          str\n            .split('\\n')\n            .map((txt) => txt.replace(reg, ''))\n            .join('\\n'),\n        )\n        .position(newStart, this.end);\n    }\n  }\n  /** Notify any possible listeners of the change */\n  notifyChange() {\n    const event = new Event('input', { bubbles: true, cancelable: false });\n    this.elm.dispatchEvent(event);\n  }\n}\n"
  ],
  "mappings": "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"
}